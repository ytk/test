# リモートリポジトリをクローンする。
$ git clone git@github.com:ytk/test.git mytest # 末尾の mytest は省略できる。(その場合 test.git の test が使われる)
$ cd mytest

# ローカルリポジトリに log.txt を追加する。
$ vi log.txt
$ git add log.txt    # 既に log.txt が存在していた場合でも、変更した場合は git add で commit できる状態にする必要がある。
$ git commit log.txt # "git commit -a" とすると "git add -u; git commit" と同じことができる。

# ローカルリポジトリの変更をリモートレポジトリにマージする。
$ git push origin master # origin:リモートリポジトリ, master:ローカルリポジトリ

# 差分を見る。
$ vi log.txt         # 既にある log.txt を編集する。
$ git diff           # ステージ (git add) されていない差分が表示される。
$ git add log.txt    # ステージする。
$ git diff           # ステージされていない差分は無いので何も表示されない。
$ git diff --staged  # ステージされているものとリポジトリとの差分が表示される。
$ git commit log.txt
$ git diff --staged  # ステージされているものとリポジトリとの差分は無いので何も表示されない。

# 修正を取り消す。ステージしたものを取り消す。
$ vi log.txt
$ git checkout -- log.txt # log.txt の修正を取り消す。
$ vi log.txt
$ git add log.txt        # 修正途中でステージしてしまった。
$ git reset HEAD log.txt # ステージしてしまったものを取り消す。

# コミットを取り消す。
$ git log              # 取り消したいコミットの hash 値を調べる。
$ git revert (hash)    # コミットを取り消す。ステージングもワーキングコピーも戻り、コミットまで完了する。
$ git revert -n (hash) # -n(--no-commit) オプションを付けると自動コミットされないので、複数のコミットを一度に取り消す時などで使える。
## 複数のコミットを取り消す場合は、直近のものから revert すること。
## -n オプションを使って最後にまとめて commit する場合、ログには一つの revert メッセージしか残らないので、取り消し対象の hash をメッセージに追記する必要がある。
## もしくは、複数(仮に3つとする)のコミットを -n オプションを使わずに取り消した後で、git rebase -i HEAD~3 のようにすることでまとめることも可能。

# コミットし直す。(コミットメッセージの変更のみも可能)
$ vi log.txt
$ git commit -a      # 修正途中でコミットしてしまった。
$ git log            # ログに誤ったコミットが記録されている。
$ vi log.txt         # 正しい修正に直す。
$ git commit --amend # 直前にコミットした内容を引き継いで、ステージされたものと併せてコミットする。
$ git log            # 誤ったログが消え、コミットしなおしたログに差し替わっている。

# ローカルブランチを作る。
$ git branch mybranch      # mybranch の作成。
$ git checkout mybranch    # mybranch にスイッチ。"git checkout -b mybranch" とすると mybranch の作成とスイッチが同時にできる。

# ブランチをマージする。
$ vi log.txt # mybranch 上で修正。
$ git commit -a
$ git checkout master # マージ先のブランチにスイッチ。
$ git merge mybranch  # mybranch の内容を master にマージ。コンフリクトがある場合は、手動で直した後に git add -> git commit を行う。

# ローカルブランチを消す。
$ git branch -d mybranch

# リモートリポジトリの変更をローカルレポジトリにマージする。
$ git fetch origin # fetch では自分でマージを行う必要がある？
$ git pull origin  # pull では自動でマージされる？
